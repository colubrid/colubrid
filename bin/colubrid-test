#!/usr/bin/env python
#
# Copyright (C) 2013 Rodrigo Curbelo <tutorialesanonymous@gmail.com>
# Copyright (C) 2013 Daniel Francis <francis@sugarlabs.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA. 

import os
import subprocess
import shutil

tests = 'tests'
generated_files = {'json': 'cljs',
                   'tree': 'cltr'}

print '= Cleaning files ='
for i in os.listdir(tests):
    path = os.path.join(tests, i)
    if i in generated_files:
        shutil.rmtree(path)
        continue
    if os.path.splitext(i)[-1] == '.log':
        os.remove(path)

for i in generated_files:
    os.mkdir(os.path.join(tests, i))

print '= Building tests ='
for i in os.listdir(tests):
    name, ext = os.path.splitext(i)
    if ext == '.clsc':
        print '* Building %s' % i
        srcpath = os.path.join(tests, i)
        for step in generated_files:
            output = os.path.join(tests, step,
                                  '.'.join([name, generated_files[step]]))
            failed = os.system('colubridc -s %s "%s" -o "%s"' %
                                            (step, srcpath, output))
            if failed:
                print 'Failed'

colubrid_args = {'json': '+j', 'tree': '+t'}

print '= Running tests ='
for path, dirs, files in os.walk(tests):
    tformat = os.path.split(path)[-1]
    if tformat == 'tests':
        tformat = 'source'
    print '- Testing tests in format %s' % tformat
    for filename in files:
        test = os.path.join(path, filename)
        try:
            name, ext = filename.split('.')
        except:
            continue
        extensions = [generated_files[i] for i in generated_files] + ['clsc']
        if ext in extensions:
            print '  * Running test "%s"' % name
            command = ['colubrid', '%s' % test]
            if tformat in colubrid_args:
                command.insert(1, colubrid_args[tformat])
            logfile = open('%s.log' % test, 'w')
            failed = subprocess.call(command, stdout=logfile, stderr=logfile)
            if failed:
                print "Failed test %s" % name
